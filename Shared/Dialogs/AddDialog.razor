@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudDialog>
    <DialogContent>
        <MudGrid Class="align-strech">
            <MudItem xs="12" md="6">
                <MudPaper Class="d-flex align-start flex-column justify-center mud-width-full py-8">
                    <MudText Class="px-3">Dane podstawowe</MudText>
                    <MudForm @ref="formBaseData" @bind-IsValid="@formBaseDataSuccess" Class="mud-width-full px-3">
                        <MudTextField T="string" Label="Imie" Required="true" RequiredError="Musisz podać imię użytkownika" Variant="Variant.Outlined" />
                        <MudTextField T="string" Label="Nazwisko" Required="true" RequiredError="Musisz podać nazwisko użytkownika" Variant="Variant.Outlined" />
                        <MudSelect T="string" Label="Płeć" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Dense="true" Required RequiredError="Musisz wybrać płeć">
                            <MudSelectItem T="string" Value="@("K")" />
                            <MudSelectItem T="string" Value=@("M") />
                        </MudSelect>
                        <MudDatePicker Label="Data urodzenia" @bind-Date="dateOfBirth" Variant="Variant.Outlined" Required RequiredError="Musisz podać datę urodzenia"
                                        Validation="@((DateTime? date) => date < DateTime.Now)" ErrorText="Użytkownik pochodzi z przyszłości? Podaj poprawną datę"></MudDatePicker>
                    </MudForm>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" md="6">
                <MudPaper Class="d-flex align-start flex-column justify-start mud-width-full py-8" Style="height: 100%">
                    <MudText Class="px-3">Definiowanie dodatkowych pól</MudText>
                    <MudForm Model="customField" @ref="formCustomField" @bind-IsValid="@formCustomFieldSuccess" Class="mud-width-full px-3">
                        <MudTextField T="string" Label="Nazwa pola" Required="true" RequiredError="Pole musi mieć nazwę" Variant="Variant.Outlined"
                                      @bind-Value="customField.Name" Validation="@(new Func<string, IEnumerable<string>>(ChackIfNamesOfFieldAreUnique))" />
                        <MudTextField T="string" Label="Wartość" Required="false" Variant="Variant.Outlined" @bind-Value="customField.Value"/>
                        <div class="d-flex align-center justify-space-between pt-2">
                            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Disabled="@(!formCustomFieldSuccess)" Class="ml-auto" ButtonType="ButtonType.Button" 
                                       OnClick="AddCustomField">Dodaj pole</MudButton>
                        </div>
                    </MudForm>
                </MudPaper>
            </MudItem>
            <MudItem xs="12">
                <MudPaper Class="d-flex align-start flex-column justify-start mud-width-full py-8">
                    <MudText Class="px-3">Lista dodatkowych pól:</MudText>
                    @if (customFields.Count() == 0)
                    {
                        <MudText Class="align-self-center mt-5">Nic tu jeszcze nie ma 😔</MudText>
                    }
                    else
                    {
                        <MudList>
                            @foreach (CustomField customField in customFields)
                            {
                                <MudListItem Class="m-0 p-0 pl-3">
                                    <div class="d-inline-flex flex-row align-end">
                                        <MudText Class="align-self-start">@customField.Name: <strong>@customField.Value</strong></MudText>
                                        <MudTooltip Text="Usuń dodatkowe pole">
                                            <MudIconButton Class="delete-custom-field-btn" Icon="@Icons.Material.Outlined.DeleteForever" Size="Size.Small" @onclick="() => customFields.Remove(customField)" />
                                        </MudTooltip>
                                    </div>
                                </MudListItem>
                            }
                        </MudList>
                    }
                </MudPaper>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Anuluj</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@(!formBaseDataSuccess)">Dodaj</MudButton>
    </DialogActions>
</MudDialog>

<style>
    .mud-list-item-text {
        margin: 0;
    }

    .mud-list-item {
        padding-top: 0 !important;
        padding-bottom: 0 !important;
    }

    .delete-custom-field-btn:hover{
        color: red;
    }
</style>

@code {
    public record CustomField
    {
        [Required]
        public string Name { get; set; }
        public string Value { get; set; }
    }

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    private bool formBaseDataSuccess, formCustomFieldSuccess;
    private MudForm formBaseData, formCustomField;
    private DateTime? dateOfBirth;
    private CustomField customField = new CustomField();
    private List<CustomField> customFields = new List<CustomField>();

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

    private void AddCustomField()
    {
        customFields.Add(customField);
        customField = new CustomField();
    }

    private IEnumerable<string> ChackIfNamesOfFieldAreUnique(string name)
    {
        if (string.IsNullOrWhiteSpace(name))
        {
            yield return "Pole musi mieć nazwę";
            yield break;
        }
        if (customFields.Any(cf => cf.Name == name))
            yield return $"Dodano już pole o nazwie \"{name}\"";
    }
}


